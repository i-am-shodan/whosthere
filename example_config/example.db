CREATE TABLE publickeys
(
    `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    hash varchar(32) UNIQUE,
    publickey TEXT NOT NULL
);

CREATE TABLE client_versions
(
    `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    version varchar(100) CHARACTER SET latin1 COLLATE latin1_general_cs UNIQUE
);

CREATE TABLE events
(
    `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    client_id INT NOT NULL,
    FOREIGN KEY (client_id)
        REFERENCES client_versions(id)
        ON DELETE CASCADE
);

CREATE TABLE key_events (
    event_id INT,
    key_id INT,
    FOREIGN KEY (event_id) REFERENCES events(id),
    FOREIGN KEY (key_id) REFERENCES publickeys(id),
    PRIMARY KEY (event_id, key_id)
);

DELIMITER //
CREATE PROCEDURE addEvent
(
    IN param_version varchar(100)
)
BEGIN
    DECLARE clientID INT;
    DECLARE eventID INT;

    INSERT INTO `client_versions` (version) VALUES (param_version) ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), `version`=param_version;
    SELECT LAST_INSERT_ID() INTO clientID;

    INSERT INTO `events` (client_id) VALUES (clientID);
    SELECT LAST_INSERT_ID() INTO eventID;

    SELECT eventID;

END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE addKeyToEvent
(
    IN param_eventID int,
    IN param_publickey TEXT
)
BEGIN
    DECLARE keyID INT;
    DECLARE md5 varchar(32);

    SELECT MD5(param_publickey) into md5;

    INSERT INTO `publickeys` (hash, publickey) VALUES (md5, param_publickey) ON DUPLICATE KEY UPDATE id=LAST_INSERT_ID(id), `hash`=md5;
    SELECT LAST_INSERT_ID() INTO keyID;

    INSERT INTO `key_events` (event_id, key_id) VALUES (param_eventID, keyID);

END //
DELIMITER ;